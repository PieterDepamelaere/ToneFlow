#:kivy 1.11.1

#:import os os
#:import pl pathlib
#:import CU src.model.CommonUtils.CommonUtils
#:import get_color_from_hex kivy.utils.get_color_from_hex
#:import StringProperty kivy.properties.NumericProperty
#:import toast kivymd.toast.toast
#:import ILeftBodyTouch kivymd.uix.list.ILeftBodyTouch
#:import MDIconButton kivymd.uix.button.MDIconButton
#:import text_colors kivymd.color_definitions.text_colors
#:import dp kivy.metrics.dp

<TFSettingRowView@OneLineIconListItem>:
    icon: 'settings' # One can code an if-statement after this
    list_obj: None
    tfsetting_obj: None
    on_release: toast(self.text) #root.callback(root.icon)
    tfsetting_name: '' if self.tfsetting_obj is None else f'{self.tfsetting_obj.name}'

    BoxLayout:
        orientation: 'horizontal'
        size_hint_y: None
        #height: '56'
        spacing: '5dp'
        pos_hint: {'center_y': 0.5}

        MDIconButton:
            icon: root.icon
            on_release: toast(root.text) #root.on_release()

        #BoxLayout:
         #   orientation: 'vertical'
            #size_hint_y: None
            #height: '56'
            spacing: '5dp'
          #  pos_hint: {'center_x': 0.0}

        #Widget:
        MDLabel:
            id: md_label
            text: root.tfsetting_name
            #text_size: None, len(root.tfsetting_name*15)
            #halign: 'left'
            #valign: 'middle'
            default_size: 1, None
            default_size_hint: None, None
            size_hint_x: None
            #with: self.minimum_height


        MDTextField:
            id: setting_field
            hint_text: '' if root.tfsetting_obj is None else f'{root.tfsetting_obj.name}'
            text: '' if root.tfsetting_obj is None else f'{root.tfsetting_obj.value}'
            color_mode: 'primary' #'primary', options=['primary', 'accent', 'custom']
            on_text_validate: toast(f'Setting \"{root.tfsetting_obj.name}\" changed')
            helper_text: '' if root.tfsetting_obj is None else f'{root.tfsetting_obj.description.replace(os.linesep," ")}'
            helper_text_mode: 'on_focus'

        MDIconButton:
            icon: 'pencil'
            #theme_text_color: 'Custom'
            #text_color: app.theme_cls.primary_color
            on_release: root.list_obj.show_dialog_edit_setting(root)

        MDIconButton:
            icon: 'factory'
            #theme_text_color: 'Custom'
            #text_color: app.theme_cls.primary_color
            on_release: root.list_obj.show_dialog_restore_factory_setting(root)

<TFSettings>
    id: id_tfsettings
    name: CU.tfs.dic['SCREEN_SETTINGS_CLASS'].value.__name__
    on_enter:
        self.refresh_editable_list()
        # Override needed overscroll to refresh the screen to the bare minimum:
        refresh_layout.effect_cls.min_scroll_to_reload = -dp(1)

    BoxLayout:
        orientation: 'vertical'
        spacing: dp(10)
        padding: dp(20)

        BoxLayout:
            size_hint_y: None
            height: self.minimum_height

            MDIconButton:
                id: magnifier_button
                icon: 'magnify'
                on_release: root.filter_editable_list()

            MDTextField:
                id: search_field
                hint_text: f"Search {CU.tfs.dic['APP_NAME'].value} settings"
                color_mode: 'primary' #'primary', options=['primary', 'accent', 'custom']
                on_text: root.filter_editable_list()
                helper_text: 'Enter a small snippet of the name of the intended song'
                helper_text_mode: 'on_focus'

            MDIconButton:
                id: close_button
                icon: 'close'
                on_release: root.clear_search_pattern()

        MDScrollViewRefreshLayout:
            id: refresh_layout
            refresh_callback: root.refresh_editable_list
            root_layout: app.main_widget.ids.float_box

            RecycleView:
                id: rv
                key_viewclass: 'viewclass'
                key_size: 'height'

                #SelectableRecycleBoxLayout:
                 #   default_size: None, dp(56)
                  #  default_size_hint: 1, None
                   # size_hint_y: None
                    #height: self.minimum_height
                    #orientation: 'vertical'
                    #multiselect: True
                    #touch_multiselect: True

                RecycleBoxLayout:
                    padding: dp(10)
                    default_size: None, dp(56)
                    default_size_hint: 1, None
                    size_hint_y: None
                    height: self.minimum_height
                    orientation: 'vertical'

    #MDFloatingActionButton:
    #    id: floating_action_button
    #    icon: 'folder-plus'
    #    elevation_normal: 8
    #    x: Window.width - self.width - dp(25)
    #    y: dp(25)
    #    md_bg_color: app.theme_cls.primary_color
    #    specific_text_color: get_color_from_hex(text_colors[app.theme_cls.primary_palette][CU.tfs.dic['THEME_BACKGROUND_HUE'].value])
    #    on_release: root.show_filemanager_add_songs_location()