#:kivy 1.11.1

#:import os os
#:import pl pathlib
#:import CU src.model.CommonUtils.CommonUtils
#:import get_color_from_hex kivy.utils.get_color_from_hex
#:import toast kivymd.toast.toast
#:import ILeftBodyTouch kivymd.uix.list.ILeftBodyTouch
#:import MDIconButton kivymd.uix.button.MDIconButton
#:import text_colors kivymd.color_definitions.text_colors

<PlayListRowView@OneLineIconListItem>:
    icon: 'playlist-music' # One can code an if-statement after this
    list_obj: None
    playlist_obj: None
    on_release: self.list_obj.show_modal_view_playlist(self.playlist_obj)
    text: '' if self.playlist_obj is None else self.playlist_obj.file_path.stem

    BoxLayout:
        orientation: 'horizontal'
        #size_hint_y: None
        #height: '56'
        spacing: '5dp'
        pos_hint: {'center_y': 0.5}

        MDIconButton:
            icon: root.icon
            on_release: root.list_obj.show_modal_view_playlist(root.playlist_obj)

        Widget:

        MDIconButton:
            icon: 'pencil'
            #theme_text_color: 'Custom'
            #text_color: app.theme_cls.primary_color
            on_release: root.list_obj.show_dialog_rename_playlist(root)

        MDIconButton:
            icon: 'trash-can'
            #theme_text_color: 'Custom'
            #text_color: app.theme_cls.primary_color
            on_release: root.list_obj.show_dialog_remove_playlist(root)

<PLayLists>
    id: id_playlists
    name: CU.tfs.dic['SCREEN_PLAYLISTS_CLASS'].value.__name__
    on_enter:
        self.refresh_list()
        # Override needed overscroll to refresh the screen to the bare minimum:
        refresh_layout.effect_cls.min_scroll_to_reload = -dp(1)

    BoxLayout:
        orientation: 'vertical'
        spacing: dp(10)
        padding: dp(20)

        BoxLayout:
            size_hint_y: None
            height: self.minimum_height

            MDIconButton:
                id: magnifier_button
                icon: 'magnify'
                on_release: root.filter_list()

            MDTextField:
                id: search_field
                hint_text: 'Search playlists'
                color_mode: 'primary' #'primary', options=['primary', 'accent', 'custom']
                on_text: root.filter_list()
                helper_text: 'Enter a small snippet of the name of the intended playlist'
                helper_text_mode: 'on_focus'

            MDIconButton:
                id: close_button
                icon: 'close'
                on_release: root.clear_search_pattern()

        MDScrollViewRefreshLayout:
            id: refresh_layout
            refresh_callback: root.refresh_list
            root_layout: app.main_widget.ids.float_box

            RecycleView:
                id: rv
                key_viewclass: 'viewclass'
                key_size: 'height'

                #SelectableRecycleBoxLayout:
                 #   default_size: None, dp(56)
                  #  default_size_hint: 1, None
                   # size_hint_y: None
                    #height: self.minimum_height
                    #orientation: 'vertical'
                    #multiselect: True
                    #touch_multiselect: True

                RecycleBoxLayout:
                    padding: dp(10)
                    default_size: None, dp(48)
                    default_size_hint: 1, None
                    size_hint_y: None
                    height: self.minimum_height
                    orientation: 'vertical'

    MDFloatingActionButton:
        id: floating_action_button
        icon: 'plus'
        elevation_normal: 8
        x: Window.width - self.width - dp(20)
        y: dp(20)
        md_bg_color: app.theme_cls.primary_color
        specific_text_color: get_color_from_hex(text_colors[app.theme_cls.primary_palette][CU.tfs.dic['THEME_BACKGROUND_HUE'].value])
        on_release: root.show_dialog_add_playlist()