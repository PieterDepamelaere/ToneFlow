#:kivy 1.11.1

#:import os os
#:import pl pathlib
#:import CU src.model.CommonUtils.CommonUtils
#:import toast kivymd.toast.toast
#:import ILeftBodyTouch kivymd.uix.list.ILeftBodyTouch
#:import MDIconButton kivymd.uix.button.MDIconButton

<IconLeftSampleWidget@ILeftBodyTouch+MDIconButton>
    icon: root.icon

<PLayLists@Screen>
    id: id_playlist
    name: CU.tfs.dic['SCREEN_PLAYLISTS_CLASS'].value.__name__
    on_enter: self.refresh_list()

    BoxLayout:
        orientation: 'vertical'
        spacing: dp(10)
        padding: dp(20)

        BoxLayout:
            size_hint_y: None
            height: self.minimum_height

            MDIconButton:
                id: magnifier_button
                icon: 'magnify'
                on_release: root.filter_list()

            MDTextField:
                id: search_field
                hint_text: "Search playlists"
                color_mode: "primary" #"primary", options=["primary", "accent", "custom"]
                on_text: root.filter_list()
                helper_text: "Enter a small snippet of the name of the intended playlist"
                helper_text_mode: "on_focus"

            MDIconButton:
                id: close_button
                icon: 'close'
                on_release: root.clear_search_pattern()

        MDScrollViewRefreshLayout:
            id: refresh_layout
            refresh_callback: root.refresh_list
            root_layout: app.main_widget.ids.float_box

            RecycleView:
                id: rv
                key_viewclass: 'viewclass'
                key_size: 'height'


                #SelectableRecycleBoxLayout:
                 #   default_size: None, dp(56)
                  #  default_size_hint: 1, None
                   # size_hint_y: None
                    #height: self.minimum_height
                    #orientation: 'vertical'
                    #multiselect: True
                    #touch_multiselect: True

                RecycleBoxLayout:
                    padding: dp(10)
                    default_size: None, dp(48)
                    default_size_hint: 1, None
                    size_hint_y: None
                    height: self.minimum_height
                    orientation: 'vertical'

    MDFloatingActionButton:
        id: button_add_playlist
        icon: 'plus'
        opposite_colors: True
        elevation_normal: 8
        md_bg_color: app.theme_cls.primary_color
        text_color: self.theme_cls.opposite_text_color
        x: Window.width - self.width - dp(25)
        y: dp(25)
        on_release: root.show_dialog_add_playlist()

<PlayListRowView@OneLineIconListItem>:
    icon: 'playlist-music' # One can code an if-statement after this
    list_reference: None
    playlist_reference: None
    on_release: toast(self.text) #root.callback(root.icon)
    text: "" if self.playlist_reference is None else self.playlist_reference.file_path.stem # "contents (%s)"%(app.abcd)
    # f'test {str(self.playlist_reference)}' # .file_path.stem

    BoxLayout:
        orientation: 'horizontal'
        #size_hint_y: None
        #height: '56'
        spacing: '10dp'
        pos_hint: {'center_y': 0.5}

        IconLeftSampleWidget:
            icon: root.icon

        Widget:

        MDIconButton:
            icon: 'pencil'
            #theme_text_color: 'Custom'
            #text_color: app.theme_cls.primary_color
            on_release: root.list_reference.show_dialog_rename_playlist(root)

        MDIconButton:
            icon: 'trash-can'
            #theme_text_color: 'Custom'
            #text_color: app.theme_cls.primary_color
            on_release: root.list_reference.show_dialog_remove_playlist(root) # lambda *args: root.list_reference.remove_playlist(*args)